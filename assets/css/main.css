@charset "UTF-8";
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*------------------------------------*\
    $IMPORTS
\*------------------------------------*/
/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/*
@import url(http://fonts.googleapis.com/css?family=Londrina+Sketch);
@import url(http://fonts.googleapis.com/css?family=Sniglet:400,800);
@import url(http://fonts.googleapis.com/css?family=Oswald:400,700,300);
*/
@font-face {
  font-family: 'FontAwesome';
  src: url("../fonts/fontawesome-webfont.eot");
  src: url("../fonts/fontawesome-webfont.woff") format("woff"), url("../fonts/fontawesome-webfont.ttf") format("truetype"), url("../fonts/fontawesome-webfont.svg") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'FontAwesome';
  src: url("../fonts/fontawesome-webfont.eot?v=3.6.6");
  src: url("../fonts/fontawesome-webfont.eot?#iefix&v=3.6.6") format("embedded-opentype"), url("../fonts/fontawesome-webfont.woff?v=3.6.6") format("woff"), url("../fonts/fontawesome-webfont.ttf?v=3.6.6") format("truetype"), url("../fonts/fontawesome-webfont.svg#fontawesomeregular?v=3.6.6") format("svg");
  font-weight: normal;
  font-style: normal;
}

.type--londrina {
  font-family: 'Londrina Solid', cursive;
  font-weight: bold;
}

.type--londrina-sketch {
  font-family: 'Londrina Sketch';
  font-weight: bold;
}

/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

html, body {
  height: 100%;
  width: 100%;
  padding: 0;
  margin: 0;
  font-size: 100%;
  font-family: Sniglet;
  background: #fafafa;
}

h1, h2 {
  font-weight: normal;
  line-height: 1.5em;
}

iframe {
  border: 0;
  width: 100%;
  height: 100%;
}

@media only screen and (max-width: 40em) {
  html, body {
    font-size: 62.5%;
  }

  h1, h2 {
    font-size: 2em;
  }
}
@media only screen and (min-width: 40.063em) {
  html, body {
    overflow: hidden;
  }
}
/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
#world {
  height: 100%;
  -webkit-perspective: 3000px;
  -moz-perspective: 3000px;
  -ms-perspective: 3000px;
  -o-perspective: 3000px;
  perspective: 3000px;
  -webkit-perspective-origin: right;
  -moz-perspective-origin: right;
  -ms-perspective-origin: right;
  -o-perspective-origin: right;
  perspective-origin: right;
}
#world .slide:nth-child(1) {
  z-index: 17;
}
#world .slide:nth-child(2) {
  z-index: 16;
}
#world .slide:nth-child(3) {
  z-index: 15;
}
#world .slide:nth-child(4) {
  z-index: 14;
}
#world .slide:nth-child(5) {
  z-index: 13;
}
#world .slide:nth-child(6) {
  z-index: 12;
}
#world .slide:nth-child(7) {
  z-index: 11;
}
#world .slide:nth-child(8) {
  z-index: 10;
}
#world .slide:nth-child(9) {
  z-index: 9;
}
#world .slide:nth-child(10) {
  z-index: 8;
}
#world .slide:nth-child(11) {
  z-index: 7;
}
#world .slide:nth-child(12) {
  z-index: 6;
}
#world .slide:nth-child(13) {
  z-index: 5;
}
#world .slide:nth-child(14) {
  z-index: 4;
}
#world .slide:nth-child(15) {
  z-index: 3;
}
#world .slide:nth-child(16) {
  z-index: 2;
}
#world .slide:nth-child(17) {
  z-index: 1;
}

@media only screen and (min-width: 40.063em) {
  #world {
    overflow: hidden;
  }
}
.slide {
  width: 60rem;
}

.animateTransform {
  -webkit-transition: -webkit-transform 500ms cubic-bezier(0.215, 0.61, 0.355, 1), opacity 500ms cubic-bezier(0.215, 0.61, 0.355, 1);
  -moz-transition: -moz-transform 500ms cubic-bezier(0.215, 0.61, 0.355, 1), opacity 500ms cubic-bezier(0.215, 0.61, 0.355, 1);
  -o-transition: -o-transform 500ms cubic-bezier(0.215, 0.61, 0.355, 1), opacity 500ms cubic-bezier(0.215, 0.61, 0.355, 1);
  transition: transform 500ms cubic-bezier(0.215, 0.61, 0.355, 1), opacity 500ms cubic-bezier(0.215, 0.61, 0.355, 1);
}

.aspect-ratio {
  position: relative;
  padding-bottom: 66.66667%;
  height: 0;
}

.content-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@media only screen and (max-width: 40em) {
  .slide {
    position: relative;
    -webkit-transform: none !important;
    -moz-transform: none !important;
    -ms-transform: none !important;
    -o-transform: none !important;
    transform: none !important;
    opacity: 1 !important;
    width: 100%;
    padding: 1.25em;
  }

  .aspect-ratio {
    padding-bottom: 100%;
  }
}
.no-csstransforms3d .slide {
  position: relative;
  -webkit-transform: none !important;
  -moz-transform: none !important;
  -ms-transform: none !important;
  -o-transform: none !important;
  transform: none !important;
  opacity: 1 !important;
  width: 100%;
  padding: 1.25em;
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
  border-radius: none;
}
.no-csstransforms3d .aspect-ratio {
  padding-bottom: 100%;
}
.no-csstransforms3d #world {
  overflow: auto;
}

@media only screen and (min-width: 40.063em) {
  .slide {
    position: absolute;
    -webkit-box-shadow: 0px 24px 80px -35px rgba(0, 0, 0, 0.9);
    -moz-box-shadow: 0px 24px 80px -35px rgba(0, 0, 0, 0.9);
    box-shadow: 0px 24px 80px -35px rgba(0, 0, 0, 0.9);
    border-radius: 4px;
    background-color: #125758;
    background-image: -webkit-linear-gradient(45deg, #125758, #333333);
    background-image: -moz-linear-gradient(45deg, #125758, #333333);
    background-image: -o-linear-gradient(45deg, #125758, #333333);
    background-image: linear-gradient(45deg, #125758, #333333);
  }
}
/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
.dark-green {
  background-image: -webkit-linear-gradient(45deg, #333333, #125758);
  background-image: -moz-linear-gradient(45deg, #333333, #125758);
  background-image: -o-linear-gradient(45deg, #333333, #125758);
  background-image: linear-gradient(45deg, #333333, #125758);
  color: #EFF;
}
.dark-green .content {
  position: absolute;
  top: 50%;
  width: 100%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -o-transform: translateY(-50%);
  transform: translateY(-50%);
}
.dark-green h1, .dark-green h2 {
  text-align: center;
}
.dark-green a {
  color: yellow;
  text-decoration: none;
  position: relative;
  -webkit-transition: opacity 200ms ease;
  -moz-transition: opacity 200ms ease;
  -o-transition: opacity 200ms ease;
  transition: opacity 200ms ease;
  opacity: 0.9;
}
.dark-green a::before {
  position: absolute;
  width: 100%;
  background-color: yellow;
  bottom: -.3em;
  height: 1px;
  content: "";
  left: 0;
  -webkit-transform: scaleX(0);
  -moz-transform: scaleX(0);
  -ms-transform: scaleX(0);
  -o-transform: scaleX(0);
  transform: scaleX(0);
  -webkit-transition: -webkit-transform 300ms cubic-bezier(0.325, 0, 0, 1.65);
  -moz-transition: -moz-transform 300ms cubic-bezier(0.325, 0, 0, 1.65);
  -o-transition: -o-transform 300ms cubic-bezier(0.325, 0, 0, 1.65);
  transition: transform 300ms cubic-bezier(0.325, 0, 0, 1.65);
  visibility: hidden;
}
.dark-green a:hover {
  opacity: 1;
}
.dark-green a:hover::before {
  -webkit-transform: scaleX(1);
  -moz-transform: scaleX(1);
  -ms-transform: scaleX(1);
  -o-transform: scaleX(1);
  transform: scaleX(1);
  visibility: visible;
}

/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
.navy-blue {
  /**
   * adapted from Mirage
   * @see http://uigradients.com/
   */
  background-image: -webkit-linear-gradient(45deg, #16222a 10%, #3a6073 90%);
  background-image: -moz-linear-gradient(45deg, #16222a 10%, #3a6073 90%);
  background-image: -o-linear-gradient(45deg, #16222a 10%, #3a6073 90%);
  background-image: linear-gradient(45deg, #16222a 10%, #3a6073 90%);
  color: #EFF;
}
.navy-blue .content {
  position: absolute;
  top: 50%;
  width: 100%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -o-transform: translateY(-50%);
  transform: translateY(-50%);
}
.navy-blue h1, .navy-blue h2 {
  text-align: center;
}
.navy-blue a {
  color: yellow;
  text-decoration: none;
  position: relative;
  -webkit-transition: opacity 200ms ease;
  -moz-transition: opacity 200ms ease;
  -o-transition: opacity 200ms ease;
  transition: opacity 200ms ease;
  opacity: 0.9;
}
.navy-blue a::before {
  position: absolute;
  width: 100%;
  background-color: yellow;
  bottom: -.3em;
  height: 1px;
  content: "";
  left: 0;
  -webkit-transform: scaleX(0);
  -moz-transform: scaleX(0);
  -ms-transform: scaleX(0);
  -o-transform: scaleX(0);
  transform: scaleX(0);
  -webkit-transition: -webkit-transform 300ms cubic-bezier(0.325, 0, 0, 1.65);
  -moz-transition: -moz-transform 300ms cubic-bezier(0.325, 0, 0, 1.65);
  -o-transition: -o-transform 300ms cubic-bezier(0.325, 0, 0, 1.65);
  transition: transform 300ms cubic-bezier(0.325, 0, 0, 1.65);
  visibility: hidden;
}
.navy-blue a:hover {
  opacity: 1;
}
.navy-blue a:hover::before {
  -webkit-transform: scaleX(1);
  -moz-transform: scaleX(1);
  -ms-transform: scaleX(1);
  -o-transform: scaleX(1);
  transform: scaleX(1);
  visibility: visible;
}

/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
.content--iframe {
  height: 100%;
}

.external-link {
  background: black;
  background: rgba(0, 0, 0, 0.7);
  color: #FFF;
  text-decoration: none;
  padding: .5em 1em;
  text-transform: uppercase;
  position: absolute;
  bottom: 0;
  right: 0;
  margin: 2em;
  border: 1px solid black;
  border: 1px solid rgba(240, 240, 240, 0.3);
}

@media only screen and (max-width: 40em) {
  .external-link {
    font-size: 1.3rem;
    margin: 1em;
  }
}
/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
#start-leaf-container {
  top: 50%;
  left: 50%;
  -webkit-transform: translate3d(-50%, -50%, 0);
  -moz-transform: translate3d(-50%, -50%, 0);
  -ms-transform: translate3d(-50%, -50%, 0);
  -o-transform: translate3d(-50%, -50%, 0);
  transform: translate3d(-50%, -50%, 0);
  width: 50px;
  position: absolute;
  z-index: 1000;
}

.leaf-aspect-ratio {
  position: relative;
  height: 0;
  padding-bottom: 112.9502%;
}

.start-leaf {
  position: absolute;
  top: 0;
  left: 0;
  font-family: FontAwesome;
  font-size: 67px;
  opacity: 0;
  color: #EEF;
  -webkit-transform: translate3d(-2px, -2px, 0) scale(1);
  -moz-transform: translate3d(-2px, -2px, 0) scale(1);
  -ms-transform: translate3d(-2px, -2px, 0) scale(1);
  -o-transform: translate3d(-2px, -2px, 0) scale(1);
  transform: translate3d(-2px, -2px, 0) scale(1);
}

#leaf-trace__left,
#leaf-trace__right {
  visibility: hidden;
}

#leaf-trace {
  width: 100%;
  height: 100%;
  stroke: white;
  position: absolute;
  top: 0;
  left: 0;
}

#start-screen {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
}

.start-screen__panel {
  height: 100%;
  overflow: hidden;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.start-screen__top {
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -o-transform: translateY(-50%);
  transform: translateY(-50%);
  z-index: 1;
}
.start-screen__top > .start-screen__bg {
  -webkit-transform: translateY(50%);
  -moz-transform: translateY(50%);
  -ms-transform: translateY(50%);
  -o-transform: translateY(50%);
  transform: translateY(50%);
}

.start-screen__bottom {
  -webkit-transform: translateY(50%);
  -moz-transform: translateY(50%);
  -ms-transform: translateY(50%);
  -o-transform: translateY(50%);
  transform: translateY(50%);
  z-index: 2;
}
.start-screen__bottom > .start-screen__bg {
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -o-transform: translateY(-50%);
  transform: translateY(-50%);
}

.start-screen__bg {
  background-image: -webkit-linear-gradient(45deg, #125758, #ffcc33);
  background-image: -moz-linear-gradient(45deg, #125758, #ffcc33);
  background-image: -o-linear-gradient(45deg, #125758, #ffcc33);
  background-image: linear-gradient(45deg, #125758, #ffcc33);
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.slideUp {
  -webkit-transform: translateY(-100%);
  -moz-transform: translateY(-100%);
  -ms-transform: translateY(-100%);
  -o-transform: translateY(-100%);
  transform: translateY(-100%);
  -webkit-transition: all 500ms cubic-bezier(1, 0, 0, 1);
  -moz-transition: all 500ms cubic-bezier(1, 0, 0, 1);
  -o-transition: all 500ms cubic-bezier(1, 0, 0, 1);
  transition: all 500ms cubic-bezier(1, 0, 0, 1);
  opacity: 0;
}

.slideDown {
  -webkit-transform: translateY(100%);
  -moz-transform: translateY(100%);
  -ms-transform: translateY(100%);
  -o-transform: translateY(100%);
  transform: translateY(100%);
  transition: all 500ms cubic-bezier(1, 0, 0, 1);
  opacity: 0;
}

.hide {
  opacity: 0;
  -webkit-transition: opacity 0.5s;
  -moz-transition: opacity 0.5s;
  -o-transition: opacity 0.5s;
  transition: opacity 0.5s;
}

.show {
  opacity: 1;
  -webkit-transition: opacity 0.5s;
  -moz-transition: opacity 0.5s;
  -o-transition: opacity 0.5s;
  transition: opacity 0.5s;
}

.scaleDown {
  -webkit-transform: translate3d(-2px, -2px, 0) scale(0);
  -moz-transform: translate3d(-2px, -2px, 0) scale(0);
  -ms-transform: translate3d(-2px, -2px, 0) scale(0);
  -o-transform: translate3d(-2px, -2px, 0) scale(0);
  transform: translate3d(-2px, -2px, 0) scale(0);
  -webkit-transition: all 500ms cubic-bezier(0.52, -0.6, 0.735, 0.045);
  -moz-transition: all 500ms cubic-bezier(0.52, -0.6, 0.735, 0.045);
  -o-transition: all 500ms cubic-bezier(0.52, -0.6, 0.735, 0.045);
  transition: all 500ms cubic-bezier(0.52, -0.6, 0.735, 0.045);
}

/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
#hello-ka {
  background-image: -webkit-linear-gradient(45deg, #125758, #333333);
  background-image: -moz-linear-gradient(45deg, #125758, #333333);
  background-image: -o-linear-gradient(45deg, #125758, #333333);
  background-image: linear-gradient(45deg, #125758, #333333);
  background-image: -webkit-linear-gradient(45deg, #ffa500, #ffff00);
  background-image: -moz-linear-gradient(45deg, #ffa500, #ffff00);
  background-image: -o-linear-gradient(45deg, #ffa500, #ffff00);
  background-image: linear-gradient(45deg, #ffa500, #ffff00);
  /*
  .logotype-khan:first-child:before {
      color: #9db63b;
       content: "•";
      content: "\2022";
  }
  */
}
#hello-ka .content {
  color: #CCC;
  color: #000;
  overflow: hidden;
  position: absolute;
  top: 50%;
  width: 100%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -o-transform: translateY(-50%);
  transform: translateY(-50%);
}
#hello-ka span {
  display: inline-block;
}
#hello-ka .logotype {
  font-family: FontAwesome;
  letter-spacing: 0;
  position: relative;
  text-align: center;
  -webkit-font-smoothing: antialiased;
  font-size: 2.25rem;
  padding-left: 2.25rem;
}
@media only screen and (max-width: 40em) {
  #hello-ka .logotype {
    padding-left: .5rem;
  }
}
#hello-ka .logotype--khan {
  text-transform: uppercase;
}
#hello-ka .logotype--academy {
  text-transform: lowercase;
}
#hello-ka h1, #hello-ka h2 {
  text-align: center;
  margin: 5rem 1em;
}
#hello-ka .c1, #hello-ka .c2, #hello-ka .c3, #hello-ka .c4, #hello-ka .c5 {
  -webkit-transform: rotateX(90deg);
  -moz-transform: rotateX(90deg);
  -ms-transform: rotateX(90deg);
  -o-transform: rotateX(90deg);
  transform: rotateX(90deg);
  opacity: 0;
}
#hello-ka .c6 {
  opacity: 0;
}
#hello-ka .c7 {
  opacity: 0;
}
#hello-ka .c8 {
  opacity: 0;
}
#hello-ka .c9 {
  opacity: 0;
}
#hello-ka .c10 {
  opacity: 0;
}
#hello-ka .c11 {
  opacity: 0;
}
#hello-ka .c12 {
  opacity: 0;
}
#hello-ka .c13 {
  opacity: 0;
}
#hello-ka .c14 {
  opacity: 0;
}
#hello-ka .c15 {
  opacity: 0;
}
#hello-ka .c16 {
  opacity: 0;
}
#hello-ka.render .c1, #hello-ka.render .c2, #hello-ka.render .c3, #hello-ka.render .c4, #hello-ka.render .c5 {
  -webkit-transform: rotateX(0deg);
  -moz-transform: rotateX(0deg);
  -ms-transform: rotateX(0deg);
  -o-transform: rotateX(0deg);
  transform: rotateX(0deg);
}
#hello-ka.render span {
  -webkit-transition: 1s all cubic-bezier(0.23, 1, 0.32, 1);
  -moz-transition: 1s all cubic-bezier(0.23, 1, 0.32, 1);
  -o-transition: 1s all cubic-bezier(0.23, 1, 0.32, 1);
  transition: 1s all cubic-bezier(0.23, 1, 0.32, 1);
  opacity: 1;
}
#hello-ka.render .c1 {
  -webkit-transition-delay: 100ms;
  -moz-transition-delay: 100ms;
  -o-transition-delay: 100ms;
  transition-delay: 100ms;
}
#hello-ka.render .c2 {
  -webkit-transition-delay: 200ms;
  -moz-transition-delay: 200ms;
  -o-transition-delay: 200ms;
  transition-delay: 200ms;
}
#hello-ka.render .c3 {
  -webkit-transition-delay: 300ms;
  -moz-transition-delay: 300ms;
  -o-transition-delay: 300ms;
  transition-delay: 300ms;
}
#hello-ka.render .c4 {
  -webkit-transition-delay: 400ms;
  -moz-transition-delay: 400ms;
  -o-transition-delay: 400ms;
  transition-delay: 400ms;
}
#hello-ka.render .c5 {
  -webkit-transition-delay: 500ms;
  -moz-transition-delay: 500ms;
  -o-transition-delay: 500ms;
  transition-delay: 500ms;
}
#hello-ka.render .c6 {
  opacity: 1;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  -o-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: 500ms all ease-in;
  -moz-transition: 500ms all ease-in;
  -o-transition: 500ms all ease-in;
  transition: 500ms all ease-in;
  -webkit-transition-delay: 650ms;
  -moz-transition-delay: 650ms;
  -o-transition-delay: 650ms;
  transition-delay: 650ms;
}
#hello-ka.render .c7 {
  opacity: 1;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  -o-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: 500ms all ease-in;
  -moz-transition: 500ms all ease-in;
  -o-transition: 500ms all ease-in;
  transition: 500ms all ease-in;
  -webkit-transition-delay: 675ms;
  -moz-transition-delay: 675ms;
  -o-transition-delay: 675ms;
  transition-delay: 675ms;
}
#hello-ka.render .c8 {
  opacity: 1;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  -o-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: 500ms all ease-in;
  -moz-transition: 500ms all ease-in;
  -o-transition: 500ms all ease-in;
  transition: 500ms all ease-in;
  -webkit-transition-delay: 700ms;
  -moz-transition-delay: 700ms;
  -o-transition-delay: 700ms;
  transition-delay: 700ms;
}
#hello-ka.render .c9 {
  opacity: 1;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  -o-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: 500ms all ease-in;
  -moz-transition: 500ms all ease-in;
  -o-transition: 500ms all ease-in;
  transition: 500ms all ease-in;
  -webkit-transition-delay: 725ms;
  -moz-transition-delay: 725ms;
  -o-transition-delay: 725ms;
  transition-delay: 725ms;
}
#hello-ka.render .c10 {
  opacity: 1;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  -o-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: 500ms all ease-in;
  -moz-transition: 500ms all ease-in;
  -o-transition: 500ms all ease-in;
  transition: 500ms all ease-in;
  -webkit-transition-delay: 750ms;
  -moz-transition-delay: 750ms;
  -o-transition-delay: 750ms;
  transition-delay: 750ms;
}
#hello-ka.render .c11 {
  opacity: 1;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  -o-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: 500ms all ease-in;
  -moz-transition: 500ms all ease-in;
  -o-transition: 500ms all ease-in;
  transition: 500ms all ease-in;
  -webkit-transition-delay: 775ms;
  -moz-transition-delay: 775ms;
  -o-transition-delay: 775ms;
  transition-delay: 775ms;
}
#hello-ka.render .c12 {
  opacity: 1;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  -o-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: 500ms all ease-in;
  -moz-transition: 500ms all ease-in;
  -o-transition: 500ms all ease-in;
  transition: 500ms all ease-in;
  -webkit-transition-delay: 800ms;
  -moz-transition-delay: 800ms;
  -o-transition-delay: 800ms;
  transition-delay: 800ms;
}
#hello-ka.render .c13 {
  opacity: 1;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  -o-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: 500ms all ease-in;
  -moz-transition: 500ms all ease-in;
  -o-transition: 500ms all ease-in;
  transition: 500ms all ease-in;
  -webkit-transition-delay: 825ms;
  -moz-transition-delay: 825ms;
  -o-transition-delay: 825ms;
  transition-delay: 825ms;
}
#hello-ka.render .c14 {
  opacity: 1;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  -o-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: 500ms all ease-in;
  -moz-transition: 500ms all ease-in;
  -o-transition: 500ms all ease-in;
  transition: 500ms all ease-in;
  -webkit-transition-delay: 850ms;
  -moz-transition-delay: 850ms;
  -o-transition-delay: 850ms;
  transition-delay: 850ms;
}
#hello-ka.render .c15 {
  opacity: 1;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  -o-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: 500ms all ease-in;
  -moz-transition: 500ms all ease-in;
  -o-transition: 500ms all ease-in;
  transition: 500ms all ease-in;
  -webkit-transition-delay: 875ms;
  -moz-transition-delay: 875ms;
  -o-transition-delay: 875ms;
  transition-delay: 875ms;
}
#hello-ka.render .c16 {
  opacity: 1;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  -o-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: 500ms all ease-in;
  -moz-transition: 500ms all ease-in;
  -o-transition: 500ms all ease-in;
  transition: 500ms all ease-in;
  -webkit-transition-delay: 900ms;
  -moz-transition-delay: 900ms;
  -o-transition-delay: 900ms;
  transition-delay: 900ms;
}

/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
#specifics .img-aspect-ratio {
  position: relative;
  padding-bottom: 100%;
  height: 0;
}
#specifics .img-content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
#specifics .happy-hopper {
  position: absolute;
  right: 1.25rem;
  top: 1.875rem;
  width: 7.5rem;
}
@media only screen and (max-width: 40em) {
  #specifics .happy-hopper {
    width: 5.625rem;
    right: 1.25rem;
    top: -2.5rem;
    z-index: -1;
  }
}

#audio {
  padding: 5%;
  background: white;
}
#audio .content {
  height: 0;
  padding-bottom: 21.02689%;
}

#audio-svg {
  width: 75%;
}
#audio-svg > #layer1 {
  fill: #41203d;
}

.vinyl-container {
  width: 20%;
  display: inline-block;
  position: relative;
  -webkit-transform: translate3d(10%, 3%, 0);
  -moz-transform: translate3d(10%, 3%, 0);
  -ms-transform: translate3d(10%, 3%, 0);
  -o-transform: translate3d(10%, 3%, 0);
  transform: translate3d(10%, 3%, 0);
}

.vinyl-aspect-ratio {
  width: 0;
  height: 0;
  padding-bottom: 100%;
}

.vinyl-content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.outer-disc {
  width: 100%;
  height: 100%;
  background: #41203d;
  border-radius: 50%;
  position: relative;
}

.base-plate {
  width: 30%;
  height: 30%;
  top: 50%;
  left: 50%;
  -webkit-transform: translate3d(-50%, -50%, 0);
  -moz-transform: translate3d(-50%, -50%, 0);
  -ms-transform: translate3d(-50%, -50%, 0);
  -o-transform: translate3d(-50%, -50%, 0);
  transform: translate3d(-50%, -50%, 0);
  background: #CCC;
  position: absolute;
  border-radius: 50%;
}

.inner-disc {
  width: 25%;
  height: 25%;
  top: 50%;
  left: 50%;
  -webkit-transform: translate3d(-50%, -50%, 0);
  -moz-transform: translate3d(-50%, -50%, 0);
  -ms-transform: translate3d(-50%, -50%, 0);
  -o-transform: translate3d(-50%, -50%, 0);
  transform: translate3d(-50%, -50%, 0);
  background: #95BF6D;
  background: #e87f1e;
  position: absolute;
  border-radius: 50%;
}

.disc-top {
  width: 5%;
  height: 5%;
  top: 50%;
  left: 50%;
  -webkit-transform: translate3d(-50%, -50%, 0);
  -moz-transform: translate3d(-50%, -50%, 0);
  -ms-transform: translate3d(-50%, -50%, 0);
  -o-transform: translate3d(-50%, -50%, 0);
  transform: translate3d(-50%, -50%, 0);
  background: #41203d;
  position: absolute;
  border-radius: 50%;
}

/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
#keylight {
  background: url(../img/keylight_960_640.png) no-repeat center center;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

@media only screen and (max-width: 40em) {
  #keylight {
    background: url(../img/keylight_small.png) no-repeat center center;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
  }
}
#networking {
  background: black;
}

/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
#video {
  background: black;
}

@media only screen and (max-width: 40em) {
  #video {
    background: url(../img/video_640_640.png) no-repeat center center;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
  }
}
/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
#aaron-trope {
  background: url(../img/aarontrope_960_640.png) no-repeat center center;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

@media only screen and (max-width: 40em) {
  #aaron-trope {
    background: url(../img/aarontrope_640_640.png) no-repeat center center;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
  }
}
/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
#graphics {
  background: white;
}

#graphics-svg {
  width: 75%;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate3d(-50%, -50%, 0);
  -moz-transform: translate3d(-50%, -50%, 0);
  -ms-transform: translate3d(-50%, -50%, 0);
  -o-transform: translate3d(-50%, -50%, 0);
  transform: translate3d(-50%, -50%, 0);
}

/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
#hello-racer {
  background: url(../img/helloracer_960_640.png) no-repeat center center;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

@media only screen and (max-width: 40em) {
  #hello-racer {
    background: url(../img/helloracer_640_640.png) no-repeat center center;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
  }
}
/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
#anthonysu {
  background: url(../img/asu.jpg) no-repeat center center;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}
#anthonysu .content {
  height: 100%;
}

#im-asu {
  display: inline-block;
  color: white;
  top: 50%;
  left: 50%;
  position: absolute;
  transform: translate3d(-50%, -50%, 0);
  z-index: 2;
  border-bottom: 1px solid #CCC;
}

#pattern {
  top: 0;
  bottom: 0;
  position: absolute;
  left: 0;
  right: 0;
  z-index: 1;
  background: rgba(0, 0, 0, 0.6);
  z-index: 1;
}

@media only screen and (max-width: 40em) {
  #anthonysu {
    padding: 0;
    background-image: url(../img/asu_640_640.jpg);
  }
}
/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
#ready-text {
  font-family: 'Sniglet';
  position: absolute;
  bottom: 0;
  color: #EEF;
  -webkit-transform: translateY(100%);
  -moz-transform: translateY(100%);
  -ms-transform: translateY(100%);
  -o-transform: translateY(100%);
  transform: translateY(100%);
  opacity: 0;
  font-size: 2em;
}

#khan-tree-container {
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 1000;
  -webkit-transform: translate3d(-50%, -50%, 0) scale(0.9);
  -moz-transform: translate3d(-50%, -50%, 0) scale(0.9);
  -ms-transform: translate3d(-50%, -50%, 0) scale(0.9);
  -o-transform: translate3d(-50%, -50%, 0) scale(0.9);
  transform: translate3d(-50%, -50%, 0) scale(0.9);
  width: 700px;
  height: 615px;
}

#khan-tree {
  position: relative;
  width: 100%;
  height: 100%;
}
#khan-tree.render > #khan-hand {
  -webkit-transform: translate3d(230px, 210px, 0) scale(1);
  -moz-transform: translate3d(230px, 210px, 0) scale(1);
  -ms-transform: translate3d(230px, 210px, 0) scale(1);
  -o-transform: translate3d(230px, 210px, 0) scale(1);
  transform: translate3d(230px, 210px, 0) scale(1);
  opacity: 1;
}
#khan-tree.render > #ready-text {
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  -o-transform: translateY(0);
  transform: translateY(0);
  opacity: 1;
  -webkit-transition: opacity 400ms linear, -webkit-transform 400ms cubic-bezier(0.215, 0.61, 0.355, 1);
  -moz-transition: opacity 400ms linear, -moz-transform 400ms cubic-bezier(0.215, 0.61, 0.355, 1);
  -o-transition: opacity 400ms linear, -o-transform 400ms cubic-bezier(0.215, 0.61, 0.355, 1);
  transition: opacity 400ms linear, transform 400ms cubic-bezier(0.215, 0.61, 0.355, 1);
}
#khan-tree.render > .l1 {
  -webkit-transform: translate3d(186px, 430px, 0) rotateZ(-151deg) scale(1);
  -moz-transform: translate3d(186px, 430px, 0) rotateZ(-151deg) scale(1);
  -ms-transform: translate3d(186px, 430px, 0) rotateZ(-151deg) scale(1);
  -o-transform: translate3d(186px, 430px, 0) rotateZ(-151deg) scale(1);
  transform: translate3d(186px, 430px, 0) rotateZ(-151deg) scale(1);
}
#khan-tree.render > .l2 {
  -webkit-transform: translate3d(131px, 298px, 0) rotateZ(-87deg) scale(1);
  -moz-transform: translate3d(131px, 298px, 0) rotateZ(-87deg) scale(1);
  -ms-transform: translate3d(131px, 298px, 0) rotateZ(-87deg) scale(1);
  -o-transform: translate3d(131px, 298px, 0) rotateZ(-87deg) scale(1);
  transform: translate3d(131px, 298px, 0) rotateZ(-87deg) scale(1);
}
#khan-tree.render > .l3 {
  -webkit-transform: translate3d(104px, 176px, 0) rotateZ(-82deg) scale(1);
  -moz-transform: translate3d(104px, 176px, 0) rotateZ(-82deg) scale(1);
  -ms-transform: translate3d(104px, 176px, 0) rotateZ(-82deg) scale(1);
  -o-transform: translate3d(104px, 176px, 0) rotateZ(-82deg) scale(1);
  transform: translate3d(104px, 176px, 0) rotateZ(-82deg) scale(1);
}
#khan-tree.render > .l4 {
  -webkit-transform: translate3d(201px, 133px, 0) rotateZ(-56deg) scale(1);
  -moz-transform: translate3d(201px, 133px, 0) rotateZ(-56deg) scale(1);
  -ms-transform: translate3d(201px, 133px, 0) rotateZ(-56deg) scale(1);
  -o-transform: translate3d(201px, 133px, 0) rotateZ(-56deg) scale(1);
  transform: translate3d(201px, 133px, 0) rotateZ(-56deg) scale(1);
}
#khan-tree.render > .l5 {
  -webkit-transform: translate3d(285px, 73px, 0) rotateZ(-33deg) scale(1);
  -moz-transform: translate3d(285px, 73px, 0) rotateZ(-33deg) scale(1);
  -ms-transform: translate3d(285px, 73px, 0) rotateZ(-33deg) scale(1);
  -o-transform: translate3d(285px, 73px, 0) rotateZ(-33deg) scale(1);
  transform: translate3d(285px, 73px, 0) rotateZ(-33deg) scale(1);
}
#khan-tree.render > .l6 {
  -webkit-transform: translate3d(396px, 114px, 0) rotateZ(1deg) scale(1);
  -moz-transform: translate3d(396px, 114px, 0) rotateZ(1deg) scale(1);
  -ms-transform: translate3d(396px, 114px, 0) rotateZ(1deg) scale(1);
  -o-transform: translate3d(396px, 114px, 0) rotateZ(1deg) scale(1);
  transform: translate3d(396px, 114px, 0) rotateZ(1deg) scale(1);
}
#khan-tree.render > .l7 {
  -webkit-transform: translate3d(492px, 186px, 0) rotateZ(10deg) scale(1);
  -moz-transform: translate3d(492px, 186px, 0) rotateZ(10deg) scale(1);
  -ms-transform: translate3d(492px, 186px, 0) rotateZ(10deg) scale(1);
  -o-transform: translate3d(492px, 186px, 0) rotateZ(10deg) scale(1);
  transform: translate3d(492px, 186px, 0) rotateZ(10deg) scale(1);
}
#khan-tree.render > .l8 {
  -webkit-transform: translate3d(465px, 268px, 0) rotateZ(34deg) scale(1);
  -moz-transform: translate3d(465px, 268px, 0) rotateZ(34deg) scale(1);
  -ms-transform: translate3d(465px, 268px, 0) rotateZ(34deg) scale(1);
  -o-transform: translate3d(465px, 268px, 0) rotateZ(34deg) scale(1);
  transform: translate3d(465px, 268px, 0) rotateZ(34deg) scale(1);
}
#khan-tree.render > .l9 {
  -webkit-transform: translate3d(528px, 350px, 0) rotateZ(72deg) scale(1);
  -moz-transform: translate3d(528px, 350px, 0) rotateZ(72deg) scale(1);
  -ms-transform: translate3d(528px, 350px, 0) rotateZ(72deg) scale(1);
  -o-transform: translate3d(528px, 350px, 0) rotateZ(72deg) scale(1);
  transform: translate3d(528px, 350px, 0) rotateZ(72deg) scale(1);
}
#khan-tree.render > .l10 {
  -webkit-transform: translate3d(467px, 423px, 0) rotateZ(72deg) scale(1);
  -moz-transform: translate3d(467px, 423px, 0) rotateZ(72deg) scale(1);
  -ms-transform: translate3d(467px, 423px, 0) rotateZ(72deg) scale(1);
  -o-transform: translate3d(467px, 423px, 0) rotateZ(72deg) scale(1);
  transform: translate3d(467px, 423px, 0) rotateZ(72deg) scale(1);
}
#khan-tree.render > .l11 {
  -webkit-transform: translate3d(95px, 394px, 0) rotateZ(-132deg) scale(1);
  -moz-transform: translate3d(95px, 394px, 0) rotateZ(-132deg) scale(1);
  -ms-transform: translate3d(95px, 394px, 0) rotateZ(-132deg) scale(1);
  -o-transform: translate3d(95px, 394px, 0) rotateZ(-132deg) scale(1);
  transform: translate3d(95px, 394px, 0) rotateZ(-132deg) scale(1);
}
#khan-tree.render > .l12 {
  -webkit-transform: translate3d(34px, 305px, 0) rotateZ(-132deg) scale(1);
  -moz-transform: translate3d(34px, 305px, 0) rotateZ(-132deg) scale(1);
  -ms-transform: translate3d(34px, 305px, 0) rotateZ(-132deg) scale(1);
  -o-transform: translate3d(34px, 305px, 0) rotateZ(-132deg) scale(1);
  transform: translate3d(34px, 305px, 0) rotateZ(-132deg) scale(1);
}
#khan-tree.render > .l13 {
  -webkit-transform: translate3d(13px, 212px, 0) rotateZ(-143deg) scale(1);
  -moz-transform: translate3d(13px, 212px, 0) rotateZ(-143deg) scale(1);
  -ms-transform: translate3d(13px, 212px, 0) rotateZ(-143deg) scale(1);
  -o-transform: translate3d(13px, 212px, 0) rotateZ(-143deg) scale(1);
  transform: translate3d(13px, 212px, 0) rotateZ(-143deg) scale(1);
}
#khan-tree.render > .l14 {
  -webkit-transform: translate3d(14px, 140px, 0) rotateZ(-106deg) scale(1);
  -moz-transform: translate3d(14px, 140px, 0) rotateZ(-106deg) scale(1);
  -ms-transform: translate3d(14px, 140px, 0) rotateZ(-106deg) scale(1);
  -o-transform: translate3d(14px, 140px, 0) rotateZ(-106deg) scale(1);
  transform: translate3d(14px, 140px, 0) rotateZ(-106deg) scale(1);
}
#khan-tree.render > .l15 {
  -webkit-transform: translate3d(101px, 60px, 0) rotateZ(-98deg) scale(1);
  -moz-transform: translate3d(101px, 60px, 0) rotateZ(-98deg) scale(1);
  -ms-transform: translate3d(101px, 60px, 0) rotateZ(-98deg) scale(1);
  -o-transform: translate3d(101px, 60px, 0) rotateZ(-98deg) scale(1);
  transform: translate3d(101px, 60px, 0) rotateZ(-98deg) scale(1);
}
#khan-tree.render > .l16 {
  -webkit-transform: translate3d(218px, 24px, 0) rotateZ(-70deg) scale(1);
  -moz-transform: translate3d(218px, 24px, 0) rotateZ(-70deg) scale(1);
  -ms-transform: translate3d(218px, 24px, 0) rotateZ(-70deg) scale(1);
  -o-transform: translate3d(218px, 24px, 0) rotateZ(-70deg) scale(1);
  transform: translate3d(218px, 24px, 0) rotateZ(-70deg) scale(1);
}
#khan-tree.render > .l17 {
  -webkit-transform: translate3d(383px, 11px, 0) rotateZ(-28deg) scale(1);
  -moz-transform: translate3d(383px, 11px, 0) rotateZ(-28deg) scale(1);
  -ms-transform: translate3d(383px, 11px, 0) rotateZ(-28deg) scale(1);
  -o-transform: translate3d(383px, 11px, 0) rotateZ(-28deg) scale(1);
  transform: translate3d(383px, 11px, 0) rotateZ(-28deg) scale(1);
}
#khan-tree.render > .l18 {
  -webkit-transform: translate3d(488px, 25px, 0) rotateZ(15deg) scale(1);
  -moz-transform: translate3d(488px, 25px, 0) rotateZ(15deg) scale(1);
  -ms-transform: translate3d(488px, 25px, 0) rotateZ(15deg) scale(1);
  -o-transform: translate3d(488px, 25px, 0) rotateZ(15deg) scale(1);
  transform: translate3d(488px, 25px, 0) rotateZ(15deg) scale(1);
}
#khan-tree.render > .l19 {
  -webkit-transform: translate3d(532px, 92px, 0) rotateZ(18deg) scale(1);
  -moz-transform: translate3d(532px, 92px, 0) rotateZ(18deg) scale(1);
  -ms-transform: translate3d(532px, 92px, 0) rotateZ(18deg) scale(1);
  -o-transform: translate3d(532px, 92px, 0) rotateZ(18deg) scale(1);
  transform: translate3d(532px, 92px, 0) rotateZ(18deg) scale(1);
}
#khan-tree.render > .l20 {
  -webkit-transform: translate3d(592px, 182px, 0) rotateZ(31deg) scale(1);
  -moz-transform: translate3d(592px, 182px, 0) rotateZ(31deg) scale(1);
  -ms-transform: translate3d(592px, 182px, 0) rotateZ(31deg) scale(1);
  -o-transform: translate3d(592px, 182px, 0) rotateZ(31deg) scale(1);
  transform: translate3d(592px, 182px, 0) rotateZ(31deg) scale(1);
}
#khan-tree.render > .l21 {
  -webkit-transform: translate3d(598px, 275px, 0) rotateZ(61deg) scale(1);
  -moz-transform: translate3d(598px, 275px, 0) rotateZ(61deg) scale(1);
  -ms-transform: translate3d(598px, 275px, 0) rotateZ(61deg) scale(1);
  -o-transform: translate3d(598px, 275px, 0) rotateZ(61deg) scale(1);
  transform: translate3d(598px, 275px, 0) rotateZ(61deg) scale(1);
}
#khan-tree.render > .l22 {
  -webkit-transform: translate3d(159px, 18px, 0) rotateZ(-67deg) scale(1);
  -moz-transform: translate3d(159px, 18px, 0) rotateZ(-67deg) scale(1);
  -ms-transform: translate3d(159px, 18px, 0) rotateZ(-67deg) scale(1);
  -o-transform: translate3d(159px, 18px, 0) rotateZ(-67deg) scale(1);
  transform: translate3d(159px, 18px, 0) rotateZ(-67deg) scale(1);
}
#khan-tree.render > .l23 {
  -webkit-transform: translate3d(287px, -8px, 0) rotateZ(-80deg) scale(1);
  -moz-transform: translate3d(287px, -8px, 0) rotateZ(-80deg) scale(1);
  -ms-transform: translate3d(287px, -8px, 0) rotateZ(-80deg) scale(1);
  -o-transform: translate3d(287px, -8px, 0) rotateZ(-80deg) scale(1);
  transform: translate3d(287px, -8px, 0) rotateZ(-80deg) scale(1);
}

#khan-hand {
  width: 300px;
  fill: #9b9188;
  width: 275px;
  height: 405px;
  position: absolute;
  -webkit-transform: translate3d(230px, 210px, 0) scale(0);
  -moz-transform: translate3d(230px, 210px, 0) scale(0);
  -ms-transform: translate3d(230px, 210px, 0) scale(0);
  -o-transform: translate3d(230px, 210px, 0) scale(0);
  transform: translate3d(230px, 210px, 0) scale(0);
  opacity: 0;
}

.leaf {
  font-family: 'FontAwesome';
  position: absolute;
  color: #9eb63a;
}

#khan-tree.render > #khan-hand {
  -webkit-transition: -webkit-transform 300ms cubic-bezier(0.215, 0.61, 0.355, 1);
  -webkit-transition-delay: 500ms;
  -moz-transition: -moz-transform 300ms cubic-bezier(0.215, 0.61, 0.355, 1) 500ms;
  -o-transition: -o-transform 300ms cubic-bezier(0.215, 0.61, 0.355, 1) 500ms;
  transition: transform 300ms cubic-bezier(0.215, 0.61, 0.355, 1) 500ms;
}
#khan-tree.render > .r1 {
  -webkit-transition: all 500ms cubic-bezier(0.325, 0, 0, 1.65);
  -moz-transition: all 500ms cubic-bezier(0.325, 0, 0, 1.65);
  -o-transition: all 500ms cubic-bezier(0.325, 0, 0, 1.65);
  transition: all 500ms cubic-bezier(0.325, 0, 0, 1.65);
  -webkit-transition-delay: 200ms;
  -moz-transition-delay: 200ms;
  -o-transition-delay: 200ms;
  transition-delay: 200ms;
}
#khan-tree.render > .r2 {
  -webkit-transition: all 500ms cubic-bezier(0.325, 0, 0, 1.65);
  -moz-transition: all 500ms cubic-bezier(0.325, 0, 0, 1.65);
  -o-transition: all 500ms cubic-bezier(0.325, 0, 0, 1.65);
  transition: all 500ms cubic-bezier(0.325, 0, 0, 1.65);
  -webkit-transition-delay: 400ms;
  -moz-transition-delay: 400ms;
  -o-transition-delay: 400ms;
  transition-delay: 400ms;
}
#khan-tree.render > .r3 {
  -webkit-transition: all 500ms cubic-bezier(0.325, 0, 0, 1.65);
  -moz-transition: all 500ms cubic-bezier(0.325, 0, 0, 1.65);
  -o-transition: all 500ms cubic-bezier(0.325, 0, 0, 1.65);
  transition: all 500ms cubic-bezier(0.325, 0, 0, 1.65);
}
#khan-tree.render > .l1 {
  -webkit-transition-delay: 520ms;
  -moz-transition-delay: 520ms;
  -o-transition-delay: 520ms;
  transition-delay: 520ms;
}
#khan-tree.render > .l2 {
  -webkit-transition-delay: 540ms;
  -moz-transition-delay: 540ms;
  -o-transition-delay: 540ms;
  transition-delay: 540ms;
}
#khan-tree.render > .l3 {
  -webkit-transition-delay: 560ms;
  -moz-transition-delay: 560ms;
  -o-transition-delay: 560ms;
  transition-delay: 560ms;
}
#khan-tree.render > .l4 {
  -webkit-transition-delay: 580ms;
  -moz-transition-delay: 580ms;
  -o-transition-delay: 580ms;
  transition-delay: 580ms;
}
#khan-tree.render > .l5 {
  -webkit-transition-delay: 600ms;
  -moz-transition-delay: 600ms;
  -o-transition-delay: 600ms;
  transition-delay: 600ms;
}
#khan-tree.render > .l6 {
  -webkit-transition-delay: 620ms;
  -moz-transition-delay: 620ms;
  -o-transition-delay: 620ms;
  transition-delay: 620ms;
}
#khan-tree.render > .l7 {
  -webkit-transition-delay: 640ms;
  -moz-transition-delay: 640ms;
  -o-transition-delay: 640ms;
  transition-delay: 640ms;
}
#khan-tree.render > .l8 {
  -webkit-transition-delay: 660ms;
  -moz-transition-delay: 660ms;
  -o-transition-delay: 660ms;
  transition-delay: 660ms;
}
#khan-tree.render > .l9 {
  -webkit-transition-delay: 680ms;
  -moz-transition-delay: 680ms;
  -o-transition-delay: 680ms;
  transition-delay: 680ms;
}
#khan-tree.render > .l10 {
  -webkit-transition-delay: 700ms;
  -moz-transition-delay: 700ms;
  -o-transition-delay: 700ms;
  transition-delay: 700ms;
}
#khan-tree.render > .l11 {
  -webkit-transition-delay: 720ms;
  -moz-transition-delay: 720ms;
  -o-transition-delay: 720ms;
  transition-delay: 720ms;
}
#khan-tree.render > .l12 {
  -webkit-transition-delay: 740ms;
  -moz-transition-delay: 740ms;
  -o-transition-delay: 740ms;
  transition-delay: 740ms;
}
#khan-tree.render > .l13 {
  -webkit-transition-delay: 760ms;
  -moz-transition-delay: 760ms;
  -o-transition-delay: 760ms;
  transition-delay: 760ms;
}
#khan-tree.render > .l14 {
  -webkit-transition-delay: 780ms;
  -moz-transition-delay: 780ms;
  -o-transition-delay: 780ms;
  transition-delay: 780ms;
}
#khan-tree.render > .l15 {
  -webkit-transition-delay: 800ms;
  -moz-transition-delay: 800ms;
  -o-transition-delay: 800ms;
  transition-delay: 800ms;
}
#khan-tree.render > .l16 {
  -webkit-transition-delay: 820ms;
  -moz-transition-delay: 820ms;
  -o-transition-delay: 820ms;
  transition-delay: 820ms;
}
#khan-tree.render > .l17 {
  -webkit-transition-delay: 840ms;
  -moz-transition-delay: 840ms;
  -o-transition-delay: 840ms;
  transition-delay: 840ms;
}
#khan-tree.render > .l18 {
  -webkit-transition-delay: 860ms;
  -moz-transition-delay: 860ms;
  -o-transition-delay: 860ms;
  transition-delay: 860ms;
}
#khan-tree.render > .l19 {
  -webkit-transition-delay: 880ms;
  -moz-transition-delay: 880ms;
  -o-transition-delay: 880ms;
  transition-delay: 880ms;
}
#khan-tree.render > .l20 {
  -webkit-transition-delay: 900ms;
  -moz-transition-delay: 900ms;
  -o-transition-delay: 900ms;
  transition-delay: 900ms;
}
#khan-tree.render > .l21 {
  -webkit-transition-delay: 920ms;
  -moz-transition-delay: 920ms;
  -o-transition-delay: 920ms;
  transition-delay: 920ms;
}
#khan-tree.render > .l22 {
  -webkit-transition-delay: 940ms;
  -moz-transition-delay: 940ms;
  -o-transition-delay: 940ms;
  transition-delay: 940ms;
}
#khan-tree.render > .l23 {
  -webkit-transition-delay: 960ms;
  -moz-transition-delay: 960ms;
  -o-transition-delay: 960ms;
  transition-delay: 960ms;
}

.l1 {
  font-size: 90px;
  -webkit-transform: translate3d(186px, 430px, 0) rotateZ(-151deg) scale(0);
  -moz-transform: translate3d(186px, 430px, 0) rotateZ(-151deg) scale(0);
  -ms-transform: translate3d(186px, 430px, 0) rotateZ(-151deg) scale(0);
  -o-transform: translate3d(186px, 430px, 0) rotateZ(-151deg) scale(0);
  transform: translate3d(186px, 430px, 0) rotateZ(-151deg) scale(0);
}

.l2 {
  font-size: 127px;
  -webkit-transform: translate3d(131px, 298px, 0) rotateZ(-87deg) scale(0);
  -moz-transform: translate3d(131px, 298px, 0) rotateZ(-87deg) scale(0);
  -ms-transform: translate3d(131px, 298px, 0) rotateZ(-87deg) scale(0);
  -o-transform: translate3d(131px, 298px, 0) rotateZ(-87deg) scale(0);
  transform: translate3d(131px, 298px, 0) rotateZ(-87deg) scale(0);
}

.l3 {
  font-size: 134px;
  -webkit-transform: translate3d(104px, 176px, 0) rotateZ(-82deg) scale(0);
  -moz-transform: translate3d(104px, 176px, 0) rotateZ(-82deg) scale(0);
  -ms-transform: translate3d(104px, 176px, 0) rotateZ(-82deg) scale(0);
  -o-transform: translate3d(104px, 176px, 0) rotateZ(-82deg) scale(0);
  transform: translate3d(104px, 176px, 0) rotateZ(-82deg) scale(0);
}

.l4 {
  font-size: 125px;
  -webkit-transform: translate3d(201px, 133px, 0) rotateZ(-56deg) scale(0);
  -moz-transform: translate3d(201px, 133px, 0) rotateZ(-56deg) scale(0);
  -ms-transform: translate3d(201px, 133px, 0) rotateZ(-56deg) scale(0);
  -o-transform: translate3d(201px, 133px, 0) rotateZ(-56deg) scale(0);
  transform: translate3d(201px, 133px, 0) rotateZ(-56deg) scale(0);
}

.l5 {
  font-size: 127px;
  -webkit-transform: translate3d(285px, 73px, 0) rotateZ(-33deg) scale(0);
  -moz-transform: translate3d(285px, 73px, 0) rotateZ(-33deg) scale(0);
  -ms-transform: translate3d(285px, 73px, 0) rotateZ(-33deg) scale(0);
  -o-transform: translate3d(285px, 73px, 0) rotateZ(-33deg) scale(0);
  transform: translate3d(285px, 73px, 0) rotateZ(-33deg) scale(0);
}

.l6 {
  font-size: 128px;
  -webkit-transform: translate3d(396px, 114px, 0) rotateZ(1deg) scale(0);
  -moz-transform: translate3d(396px, 114px, 0) rotateZ(1deg) scale(0);
  -ms-transform: translate3d(396px, 114px, 0) rotateZ(1deg) scale(0);
  -o-transform: translate3d(396px, 114px, 0) rotateZ(1deg) scale(0);
  transform: translate3d(396px, 114px, 0) rotateZ(1deg) scale(0);
}

.l7 {
  font-size: 89px;
  -webkit-transform: translate3d(492px, 186px, 0) rotateZ(10deg) scale(0);
  -moz-transform: translate3d(492px, 186px, 0) rotateZ(10deg) scale(0);
  -ms-transform: translate3d(492px, 186px, 0) rotateZ(10deg) scale(0);
  -o-transform: translate3d(492px, 186px, 0) rotateZ(10deg) scale(0);
  transform: translate3d(492px, 186px, 0) rotateZ(10deg) scale(0);
}

.l8 {
  font-size: 108px;
  -webkit-transform: translate3d(465px, 268px, 0) rotateZ(34deg) scale(0);
  -moz-transform: translate3d(465px, 268px, 0) rotateZ(34deg) scale(0);
  -ms-transform: translate3d(465px, 268px, 0) rotateZ(34deg) scale(0);
  -o-transform: translate3d(465px, 268px, 0) rotateZ(34deg) scale(0);
  transform: translate3d(465px, 268px, 0) rotateZ(34deg) scale(0);
}

.l9 {
  font-size: 120px;
  -webkit-transform: translate3d(528px, 350px, 0) rotateZ(72deg) scale(0);
  -moz-transform: translate3d(528px, 350px, 0) rotateZ(72deg) scale(0);
  -ms-transform: translate3d(528px, 350px, 0) rotateZ(72deg) scale(0);
  -o-transform: translate3d(528px, 350px, 0) rotateZ(72deg) scale(0);
  transform: translate3d(528px, 350px, 0) rotateZ(72deg) scale(0);
}

.l10 {
  font-size: 99px;
  -webkit-transform: translate3d(467px, 423px, 0) rotateZ(72deg) scale(0);
  -moz-transform: translate3d(467px, 423px, 0) rotateZ(72deg) scale(0);
  -ms-transform: translate3d(467px, 423px, 0) rotateZ(72deg) scale(0);
  -o-transform: translate3d(467px, 423px, 0) rotateZ(72deg) scale(0);
  transform: translate3d(467px, 423px, 0) rotateZ(72deg) scale(0);
}

.l11 {
  font-size: 77px;
  -webkit-transform: translate3d(95px, 394px, 0) rotateZ(-132deg) scale(0);
  -moz-transform: translate3d(95px, 394px, 0) rotateZ(-132deg) scale(0);
  -ms-transform: translate3d(95px, 394px, 0) rotateZ(-132deg) scale(0);
  -o-transform: translate3d(95px, 394px, 0) rotateZ(-132deg) scale(0);
  transform: translate3d(95px, 394px, 0) rotateZ(-132deg) scale(0);
}

.l12 {
  font-size: 89px;
  -webkit-transform: translate3d(34px, 305px, 0) rotateZ(-132deg) scale(0);
  -moz-transform: translate3d(34px, 305px, 0) rotateZ(-132deg) scale(0);
  -ms-transform: translate3d(34px, 305px, 0) rotateZ(-132deg) scale(0);
  -o-transform: translate3d(34px, 305px, 0) rotateZ(-132deg) scale(0);
  transform: translate3d(34px, 305px, 0) rotateZ(-132deg) scale(0);
}

.l13 {
  font-size: 91px;
  -webkit-transform: translate3d(13px, 212px, 0) rotateZ(-143deg) scale(0);
  -moz-transform: translate3d(13px, 212px, 0) rotateZ(-143deg) scale(0);
  -ms-transform: translate3d(13px, 212px, 0) rotateZ(-143deg) scale(0);
  -o-transform: translate3d(13px, 212px, 0) rotateZ(-143deg) scale(0);
  transform: translate3d(13px, 212px, 0) rotateZ(-143deg) scale(0);
}

.l14 {
  font-size: 81px;
  -webkit-transform: translate3d(14px, 140px, 0) rotateZ(-106deg) scale(0);
  -moz-transform: translate3d(14px, 140px, 0) rotateZ(-106deg) scale(0);
  -ms-transform: translate3d(14px, 140px, 0) rotateZ(-106deg) scale(0);
  -o-transform: translate3d(14px, 140px, 0) rotateZ(-106deg) scale(0);
  transform: translate3d(14px, 140px, 0) rotateZ(-106deg) scale(0);
}

.l15 {
  font-size: 123px;
  -webkit-transform: translate3d(101px, 60px, 0) rotateZ(-98deg) scale(0);
  -moz-transform: translate3d(101px, 60px, 0) rotateZ(-98deg) scale(0);
  -ms-transform: translate3d(101px, 60px, 0) rotateZ(-98deg) scale(0);
  -o-transform: translate3d(101px, 60px, 0) rotateZ(-98deg) scale(0);
  transform: translate3d(101px, 60px, 0) rotateZ(-98deg) scale(0);
}

.l16 {
  font-size: 97px;
  -webkit-transform: translate3d(218px, 24px, 0) rotateZ(-70deg) scale(0);
  -moz-transform: translate3d(218px, 24px, 0) rotateZ(-70deg) scale(0);
  -ms-transform: translate3d(218px, 24px, 0) rotateZ(-70deg) scale(0);
  -o-transform: translate3d(218px, 24px, 0) rotateZ(-70deg) scale(0);
  transform: translate3d(218px, 24px, 0) rotateZ(-70deg) scale(0);
}

.l17 {
  font-size: 102px;
  -webkit-transform: translate3d(383px, 11px, 0) rotateZ(-28deg) scale(0);
  -moz-transform: translate3d(383px, 11px, 0) rotateZ(-28deg) scale(0);
  -ms-transform: translate3d(383px, 11px, 0) rotateZ(-28deg) scale(0);
  -o-transform: translate3d(383px, 11px, 0) rotateZ(-28deg) scale(0);
  transform: translate3d(383px, 11px, 0) rotateZ(-28deg) scale(0);
}

.l18 {
  font-size: 72px;
  -webkit-transform: translate3d(488px, 25px, 0) rotateZ(15deg) scale(0);
  -moz-transform: translate3d(488px, 25px, 0) rotateZ(15deg) scale(0);
  -ms-transform: translate3d(488px, 25px, 0) rotateZ(15deg) scale(0);
  -o-transform: translate3d(488px, 25px, 0) rotateZ(15deg) scale(0);
  transform: translate3d(488px, 25px, 0) rotateZ(15deg) scale(0);
}

.l19 {
  font-size: 81px;
  -webkit-transform: translate3d(532px, 92px, 0) rotateZ(18deg) scale(0);
  -moz-transform: translate3d(532px, 92px, 0) rotateZ(18deg) scale(0);
  -ms-transform: translate3d(532px, 92px, 0) rotateZ(18deg) scale(0);
  -o-transform: translate3d(532px, 92px, 0) rotateZ(18deg) scale(0);
  transform: translate3d(532px, 92px, 0) rotateZ(18deg) scale(0);
}

.l20 {
  font-size: 96px;
  -webkit-transform: translate3d(592px, 182px, 0) rotateZ(31deg) scale(0);
  -moz-transform: translate3d(592px, 182px, 0) rotateZ(31deg) scale(0);
  -ms-transform: translate3d(592px, 182px, 0) rotateZ(31deg) scale(0);
  -o-transform: translate3d(592px, 182px, 0) rotateZ(31deg) scale(0);
  transform: translate3d(592px, 182px, 0) rotateZ(31deg) scale(0);
}

.l21 {
  font-size: 84px;
  -webkit-transform: translate3d(598px, 275px, 0) rotateZ(61deg) scale(0);
  -moz-transform: translate3d(598px, 275px, 0) rotateZ(61deg) scale(0);
  -ms-transform: translate3d(598px, 275px, 0) rotateZ(61deg) scale(0);
  -o-transform: translate3d(598px, 275px, 0) rotateZ(61deg) scale(0);
  transform: translate3d(598px, 275px, 0) rotateZ(61deg) scale(0);
}

.l22 {
  font-size: 63px;
  -webkit-transform: translate3d(159px, 18px, 0) rotateZ(-67deg) scale(0);
  -moz-transform: translate3d(159px, 18px, 0) rotateZ(-67deg) scale(0);
  -ms-transform: translate3d(159px, 18px, 0) rotateZ(-67deg) scale(0);
  -o-transform: translate3d(159px, 18px, 0) rotateZ(-67deg) scale(0);
  transform: translate3d(159px, 18px, 0) rotateZ(-67deg) scale(0);
}

.l23 {
  font-size: 63px;
  -webkit-transform: translate3d(287px, -8px, 0) rotateZ(-80deg) scale(0);
  -moz-transform: translate3d(287px, -8px, 0) rotateZ(-80deg) scale(0);
  -ms-transform: translate3d(287px, -8px, 0) rotateZ(-80deg) scale(0);
  -o-transform: translate3d(287px, -8px, 0) rotateZ(-80deg) scale(0);
  transform: translate3d(287px, -8px, 0) rotateZ(-80deg) scale(0);
}

@media only screen and (max-width: 40em) {
  #khan-tree-container {
    -webkit-transform: translate3d(-50%, -50%, 0) scale(0.4);
    -moz-transform: translate3d(-50%, -50%, 0) scale(0.4);
    -ms-transform: translate3d(-50%, -50%, 0) scale(0.4);
    -o-transform: translate3d(-50%, -50%, 0) scale(0.4);
    transform: translate3d(-50%, -50%, 0) scale(0.4);
  }

  #ready-text {
    font-size: 6em;
  }
}
/*------------------------------------*\
    BASE
\*------------------------------------*/
/**
 * imports for all mixins + global project variables
 */
/**
 * Easings
 */
/*------------------------------------*\
    EASINGS
\*------------------------------------*/
/**
 * Adapted from https://github.com/wagerfield/cssmixins
 *
 * Thanks to Robert Penner for his work on easing,
 * and to Matthew Lein for converting these functions into
 * approximated cubic-bezier functions. 
 *
 * @see http://robertpenner.com/
 * @see http://matthewlein.com/ceaser/
 * @see http://easings.net/
 */
/**
 * Responsive
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/856ffff4d9c8cd9195d23c43cc1b5cfacb5b7a4c/scss/foundation/_settings.scss#L146
 */
/* 0, 640px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/**
 * Functions
 */
/*------------------------------------*\
   FUNCTIONS
\*------------------------------------*/
/**
 * @see Zurb Foundation
 * @see https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss
 */
/**
 * Import once
 */
/**
 * Typography
 */
/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/
/**
 *   @include font-face("Blooming Grove", font-files("examples/bgrove.ttf", "examples/bgrove.otf"));
 *   produces
 *   @font-face {
 *       font-family: "Blooming Grove";
 *       src: url('/fonts/examples/bgrove.ttf') format('truetype'), url('/fonts/examples/bgrove.otf') format('opentype');
 *   }
 */
/**
 * Compass CSS3
 * @see http://compass-style.org/reference/compass/css3/
 */
#credits {
  padding: 3em;
  color: #222;
  background: white;
}
#credits .credits-heading,
#credits .credits-subheading {
  text-align: left;
}
#credits a {
  color: #01a2ff;
}
#credits a::before {
  background-color: #01a2ff;
}

.credits-list {
  margin: 0;
  padding: 0;
  list-style: none;
}
.credits-list > li {
  line-height: 1.5em;
  margin: 1em 0;
}
.credits-list > li:before {
  content: "-    ";
}

@media only screen and (max-width: 40em) {
  #credits {
    padding: 1em;
  }
}
